version: '3'

networks:
  lamassu-net:

volumes:
  consul_server_data:
  auth_pg_data:
  enroller_csr_store:
  enroller_pg_data:
  scep_pg_data:
  mosquitto_data:
  elastic_data:
  fluentd_data:

services:
  consul-server:
    image: consul:latest
    environment: 
      CONSUL_LOCAL_CONFIG: '${CONSUL_LOCAL_CONFIG}'
    volumes:
      - 'consul_server_data:/consul/data'
      - './lamassu/consul-server_certs:/consul/data/tls'
    ports:
      - ${CONSUL_PORT}:${CONSUL_PORT}
      - ${CONSUL_HTTPS_PORT}:${CONSUL_HTTPS_PORT}
      - ${CONSUL_UDP_PORT}:${CONSUL_UDP_PORT}/udp
    command: consul agent -server -ui -client=0.0.0.0 -bootstrap-expect=1 -data-dir /consul/data -config-dir /consul/config
    networks:
      - lamassu-net
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'

  vault:
    image: vault:latest
    environment:
      VAULT_LOCAL_CONFIG: '${VAULT_LOCAL_CONFIG}'
      VAULT_API_ADDR: '${VAULT_API_ADDR}'
    volumes:
      - './lamassu/vault_certs:/vault/tls'
    ports:
      - ${VAULT_PORT}:${VAULT_PORT}
    command: vault server -config /vault/config
    cap_add:
      - IPC_LOCK
    depends_on: 
      - consul-server
      - fluentd
    networks:
      - lamassu-net
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
  
  keycloak:
    build:
      context: https://github.com/lamassuiot/lamassu-auth.git#main
    environment:
      DB_VENDOR: '${KEYCLOAK_DB_VENDOR}'
      DB_ADDR: '${KEYCLOAK_DB_ADDR}'
      DB_DATABASE: '${KEYCLOAK_DB_DATABASE}'
      DB_USER: '${KEYCLOAK_DB_USER}'
      DB_PASSWORD: '${KEYCLOAK_DB_PASSWORD}'
      KEYCLOAK_USER: '${KEYCLOAK_USER}'
      KEYCLOAK_PASSWORD: '${KEYCLOAK_PASSWORD}'
      KEYCLOAK_IMPORT: '/tmp/lamassu.json'
    volumes:
      - './lamassu/keycloak_certs/keycloak.crt:/etc/x509/https/tls.crt'
      - './lamassu/keycloak_certs/keycloak.key:/etc/x509/https/tls.key'
    ports:
      - ${KEYCLOAK_PORT}:${KEYCLOAK_PORT}
      - ${KEYCLOAK_HTTPS_PORT}:${KEYCLOAK_HTTPS_PORT}
    depends_on:
      - keycloakdb
      - fluentd
    networks:
      - lamassu-net
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
  
  keycloakdb:
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: '${KEYCLOAK_DB_DATABASE}'
      POSTGRES_USER: '${KEYCLOAK_DB_USER}'
      POSTGRES_PASSWORD: '${KEYCLOAK_DB_PASSWORD}'
    volumes:
      - 'auth_pg_data:/var/lib/postgresql/data'
    networks:
      - lamassu-net
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'

  enrollerscep:
    build: 
      context: https://github.com/lamassuiot/enroller.git
      dockerfile: Dockerfile.scep
    environment:
      SCEP_PORT: '${ENROLLERSCEP_PORT}'
      SCEP_POSTGRESUSER: '${SCEP_POSTGRESUSER}'
      SCEP_POSTGRESDB: '${SCEP_POSTGRESDB}'
      SCEP_POSTGRESPASSWORD: '${SCEP_POSTGRESPASSWORD}'
      SCEP_POSTGRESHOSTNAME: '${SCEP_POSTGRESHOSTNAME}'
      SCEP_POSTGRESPORT: '${SCEP_POSTGRESPORT}'
      SCEP_ENROLLERUIHOST: '${ENROLLER_UIHOST}'
      SCEP_ENROLLERUIPORT: '${ENROLLER_UIPORT}'
      SCEP_ENROLLERUIPROTOCOL: '${ENROLLER_UIPROTOCOL}'
      SCEP_KEYCLOAKHOSTNAME: '${KEYCLOAK_HOSTNAME}'
      SCEP_KEYCLOAKPORT: '${KEYCLOAK_HTTPS_PORT}'
      SCEP_KEYCLOAKPROTOCOL: '${KEYCLOAK_PROTOCOL}'
      SCEP_KEYCLOAKCA: '${ENROLLERSCEP_KEYCLOAKCA}'
      SCEP_KEYCLOAKREALM: '${KEYCLOAK_REALM}'
      SCEP_CERTFILE: '${ENROLLERSCEP_CERTFILE}'
      SCEP_KEYFILE: '${ENROLLERSCEP_KEYFILE}'
      SCEP_CONSULPROTOCOL: '${CONSUL_PROTOCOL}'
      SCEP_CONSULHOST: '${CONSUL_HOST}'
      SCEP_CONSULPORT: '${CONSUL_HTTPS_PORT}'
      SCEP_CONSULCA: '${ENROLLERSCEP_CONSULCA}'
      JAEGER_SERVICE_NAME: '${ENROLLERSCEP_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - './lamassu/enrollerscep_certs:/certs'
    networks:
      - lamassu-net
    ports:
      - ${ENROLLERSCEP_PORT}:${ENROLLERSCEP_PORT}
    restart: on-failure
    depends_on:
      - scepdb
      - consul-server
      - vault
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
  
  enroller:
    build:
      context: https://github.com/lamassuiot/enroller.git
      dockerfile: Dockerfile.enroller
    environment:
      ENROLLER_PORT: '${ENROLLER_PORT}'
      ENROLLER_HOMEPATH: '${ENROLLER_HOMEPATH}'
      ENROLLER_POSTGRESDB: '${ENROLLER_POSTGRESDB}'
      ENROLLER_POSTGRESUSER: '${ENROLLER_POSTGRESUSER}'
      ENROLLER_POSTGRESPASSWORD: '${ENROLLER_POSTGRESPASSWORD}'
      ENROLLER_POSTGRESHOSTNAME: '${ENROLLER_POSTGRESHOSTNAME}'
      ENROLLER_POSTGRESPORT: '${ENROLLER_POSTGRESPORT}'
      ENROLLER_KEYCLOAKHOSTNAME: '${KEYCLOAK_HOSTNAME}'
      ENROLLER_KEYCLOAKPORT: '${KEYCLOAK_HTTPS_PORT}'
      ENROLLER_KEYCLOAKREALM: '${KEYCLOAK_REALM}'
      ENROLLER_KEYCLOAKPROTOCOL: '${KEYCLOAK_PROTOCOL}'
      ENROLLER_KEYCLOAKCA: '${ENROLLER_KEYCLOAKCA}'
      ENROLLER_ENROLLERUIPROTOCOL: '${ENROLLER_UIPROTOCOL}'
      ENROLLER_ENROLLERUIHOST: '${ENROLLER_UIHOST}'
      ENROLLER_ENROLLERUIPORT: '${ENROLLER_UIPORT}'
      ENROLLER_CACERTFILE: '${ENROLLER_CACERTFILE}'
      ENROLLER_CAKEYFILE: '${ENROLLER_CAKEYFILE}'
      ENROLLER_CERTFILE: '${ENROLLER_CERTFILE}'
      ENROLLER_KEYFILE: '${ENROLLER_KEYFILE}'
      ENROLLER_OCSPSERVER: '${ENROLLER_OCSPSERVER}'
      ENROLLER_CONSULPROTOCOL: '${CONSUL_PROTOCOL}'
      ENROLLER_CONSULHOST: '${CONSUL_HOST}'
      ENROLLER_CONSULPORT: '${CONSUL_HTTPS_PORT}'
      ENROLLER_CONSULCA: '${ENROLLER_CONSULCA}'
      JAEGER_SERVICE_NAME: '${ENROLLER_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - 'enroller_csr_store:${ENROLLER_HOMEPATH}'
      - './lamassu/enroller_certs:/certs'
    depends_on:
      - enrollerdb
      - consul-server
      - fluentd
    networks:
      - lamassu-net
    ports:
      - ${ENROLLER_PORT}:${ENROLLER_PORT}
    restart: on-failure
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
  
  ca:
    build:
      context: https://github.com/lamassuiot/lamassu-ca.git
    environment:
      CA_PORT: '${CA_PORT}'
      CA_VAULTADDRESS: '${VAULT_API_ADDR}'
      CA_VAULTROLEID: '${CA_VAULTROLEID}'
      CA_VAULTSECRETID: '${CA_VAULTSECRETID}'
      CA_VAULTCA: '${CA_VAULTCA}'
      CA_CERTFILE: '${CA_CERTFILE}'
      CA_KEYFILE: '${CA_KEYFILE}'
      CA_KEYCLOAKHOSTNAME: '${KEYCLOAK_HOSTNAME}'
      CA_KEYCLOAKPORT: '${KEYCLOAK_HTTPS_PORT}'
      CA_KEYCLOAKREALM: '${KEYCLOAK_REALM}'
      CA_KEYCLOAKCA: '${CA_KEYCLOAKCA}'
      CA_KEYCLOAKPROTOCOL: '${KEYCLOAK_PROTOCOL}'
      CA_ENROLLERUIPROTOCOL: '${ENROLLER_UIPROTOCOL}'
      CA_ENROLLERUIHOST: '${ENROLLER_UIHOST}'
      CA_ENROLLERUIPORT: '${ENROLLER_UIPORT}'
      CA_CONSULPROTOCOL: '${CONSUL_PROTOCOL}'
      CA_CONSULHOST: '${CONSUL_HOST}'
      CA_CONSULPORT: '${CONSUL_HTTPS_PORT}'
      CA_CONSULCA: '${CA_CONSULCA}'
      JAEGER_SERVICE_NAME: '${CA_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - './lamassu/ca_certs:/certs'
    networks:
      - lamassu-net
    ports:
      - ${CA_PORT}:${CA_PORT}
    restart: on-failure
    depends_on:
      - consul-server
      - vault
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'

  enrollerui:
    build:
      context: https://github.com/lamassuiot/enroller-ui.git
    volumes:
      - './lamassu/enrollerui_certs:/etc/nginx/certs/server'
    networks:
      - lamassu-net
    ports:
      - ${ENROLLER_UIPORT}:443
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
  
  enrollerdb:
    build:
      context: https://github.com/lamassuiot/enroller.git
      dockerfile: Dockerfile.enrollerdb
    environment:
      POSTGRES_DB: '${ENROLLER_POSTGRESDB}'
      POSTGRES_USER: '${ENROLLER_POSTGRESUSER}'
      POSTGRES_PASSWORD: '${ENROLLER_POSTGRESPASSWORD}'
    volumes:
      - 'enroller_pg_data:/var/lib/postgresql/data'
    networks:
      - lamassu-net
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'

  manufacturingenroll:
    build:
      context: https://github.com/lamassuiot/device-manufacturing-system.git
      dockerfile: Dockerfile.manufacturingenroll
    environment:
      ENROLLER_PORT: '${MANUFACTURINGENROLL_PORT}'
      ENROLLER_UIHOST: '${MANUFACTURING_UIHOST}'
      ENROLLER_UIPORT: '${MANUFACTURING_UIPORT}'
      ENROLLER_UIPROTOCOL: '${MANUFACTURING_UIPROTOCOL}'
      ENROLLER_KEYCLOAKHOSTNAME: '${KEYCLOAK_HOSTNAME}'
      ENROLLER_KEYCLOAKPORT: '${KEYCLOAK_HTTPS_PORT}'
      ENROLLER_KEYCLOAKPROTOCOL: '${KEYCLOAK_PROTOCOL}'
      ENROLLER_KEYCLOAKREALM: '${KEYCLOAK_REALM}'
      ENROLLER_KEYCLOAKCA: '${MANUFACTURINGENROLL_KEYCLOAKCA}'
      ENROLLER_CERTFILE: '${MANUFACTURINGENROLL_CERTFILE}'
      ENROLLER_KEYFILE: '${MANUFACTURINGENROLL_KEYFILE}'
      ENROLLER_PROXYADDRESS: '${MANUFACTURINGENROLL_PROXYADDRESS}'
      ENROLLER_PROXYCA: '${MANUFACTURINGENROLL_PROXYCA}'
      ENROLLER_CONSULPROTOCOL: '${CONSUL_PROTOCOL}'
      ENROLLER_CONSULHOST: '${CONSUL_HOST}'
      ENROLLER_CONSULPORT: '${CONSUL_HTTPS_PORT}'
      ENROLLER_CONSULCA: '${MANUFACTURINGENROLL_CONSULCA}'
      JAEGER_SERVICE_NAME: '${MANUFACTURINGENROLL_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - './lamassu/manufacturingenroll_certs:/certs'
    ports:
      - ${MANUFACTURINGENROLL_PORT}:${MANUFACTURINGENROLL_PORT}
    networks:
      - lamassu-net
    restart: on-failure
    depends_on:
      - enrollerdb
      - consul-server
      - enroller
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'

  manufacturing:
    build:
      context: https://github.com/lamassuiot/device-manufacturing-system.git
      dockerfile: Dockerfile.manufacturing
    environment:
      MANUFACTURING_PORT: '${MANUFACTURING_PORT}'
      MANUFACTURING_UIHOST: '${MANUFACTURING_UIHOST}'
      MANUFACTURING_UIPORT: '${MANUFACTURING_UIPORT}'
      MANUFACTURING_UIPROTOCOL: '${MANUFACTURING_UIPROTOCOL}'
      MANUFACTURING_KEYCLOAKHOSTNAME: '${KEYCLOAK_HOSTNAME}'
      MANUFACTURING_KEYCLOAKPORT: '${KEYCLOAK_HTTPS_PORT}'
      MANUFACTURING_KEYCLOAKPROTOCOL: '${KEYCLOAK_PROTOCOL}'
      MANUFACTURING_KEYCLOAKREALM: '${KEYCLOAK_REALM}'
      MANUFACTURING_KEYCLOAKCA: '${MANUFACTURING_KEYCLOAKCA}'
      MANUFACTURING_CERTFILE: '${MANUFACTURING_CERTFILE}'
      MANUFACTURING_KEYFILE: '${MANUFACTURING_KEYFILE}'
      MANUFACTURING_AUTHKEYFILE: '${MANUFACTURING_AUTHKEYFILE}'
      MANUFACTURING_PROXYADDRESS: '${MANUFACTURING_PROXYADDRESS}'
      MANUFACTURING_PROXYCA: '${MANUFACTURING_PROXYCA}'
      MANUFACTURING_CONSULPROTOCOL: '${CONSUL_PROTOCOL}'
      MANUFACTURING_CONSULHOST: '${CONSUL_HOST}'
      MANUFACTURING_CONSULPORT: '${CONSUL_HTTPS_PORT}'
      MANUFACTURING_CONSULCA: '${MANUFACTURING_CONSULCA}'
      JAEGER_SERVICE_NAME: '${MANUFACTURING_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - './lamassu/manufacturing_certs:/certs'
    ports:
      - ${MANUFACTURING_PORT}:${MANUFACTURING_PORT}
    networks:
      - lamassu-net
    restart: on-failure
    depends_on: 
      - consul-server
      - scepextension
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
  
  manufacturingui:
    build:
      context: https://github.com/lamassuiot/device-manufacturing-system-ui.git
    volumes:
      - './lamassu/manufacturingui_certs:/etc/nginx/certs/server'
    ports:
      - ${MANUFACTURING_UIPORT}:443
    networks:
      - lamassu-net
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
  
  scepextension:
    build:
      context: https://github.com/lamassuiot/scep.git
      dockerfile: Dockerfile.extension
    environment:
      SCEPEXTENSION_PORT: '${SCEPEXTENSION_PORT}'
      SCEPEXTENSION_CONSULPROTOCOL: '${CONSUL_PROTOCOL}'
      SCEPEXTENSION_CONSULHOST: '${CONSUL_HOST}'
      SCEPEXTENSION_CONSULPORT: '${CONSUL_HTTPS_PORT}'
      SCEPEXTENSION_CONSULCA: '${SCEPEXTENSION_CONSULCA}'
      SCEPEXTENSION_CERTFILE: '${SCEPEXTENSION_CERTFILE}'
      SCEPEXTENSION_KEYFILE: '${SCEPEXTENSION_KEYFILE}'
      SCEPEXTENSION_SERVERPORT: '${SCEPEXTENSION_SERVERPORT}'
      SCEPEXTENSION_SCEPMAPPING: '${SCEPEXTENSION_SCEPMAPPING}'
      SCEPEXTENSION_PROXYCA: '${SCEPEXTENSION_PROXYCA}'
      SCEPEXTENSION_PROXYHOST: '${SCEPEXTENSION_PROXYHOST}'
      SCEPEXTENSION_PROXYPORT: '${SCEPEXTENSION_PROXYPORT}'
      JAEGER_SERVICE_NAME: '${SCEPEXTENSION_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - './lamassu/scepextension_certs:/certs'
    ports:
      - ${SCEPEXTENSION_PORT}:${SCEPEXTENSION_PORT}
    networks:
      - lamassu-net
    restart: on-failure
    depends_on: 
      - consul-server
      - fluentd
      - scepca1
      - scepca2
      - scepca3
      - scepca4
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
  
  scepproxy:
    build:
      context: https://github.com/lamassuiot/scep.git#:proxy
    volumes:
      - './lamassu/scepproxy_certs:/etc/nginx/certs/'
    networks:
      - lamassu-net
    depends_on:
      - fluentd
      - scepextension
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
    
  scepca4:
    build:
      context: https://github.com/lamassuiot/scep.git
    environment:
      SCEP_HTTP_LISTEN_PORT: '${SCEP_HTTP_LISTEN_PORT}'
      SCEP_VAULT_ADDRESS: '${VAULT_API_ADDR}'
      SCEP_VAULT_CA: '${SCEP_VAULT_CA4}'
      SCEP_VAULT_CA_CERT: '${SCEP_VAULT_CA_CERT}'
      SCEP_ROLE_ID: '${SCEP_CA4_ROLE_ID}'
      SCEP_SECRET_ID: '${SCEP_CA4_SECRET_ID}'
      SCEP_FILE_DEPOT: '${SCEP_FILE_DEPOT}'
      SCEP_DB_NAME: '${SCEP_POSTGRESDB}'
      SCEP_DB_USER: '${SCEP_POSTGRESUSER}'
      SCEP_DB_PASSWORD: '${SCEP_POSTGRESPASSWORD}'
      SCEP_DB_HOST: '${SCEP_POSTGRESHOSTNAME}'
      SCEP_DB_PORT: '${SCEP_POSTGRESPORT}'
      SCEP_CONSULPROTOCOL: '${CONSUL_PROTOCOL}'
      SCEP_CONSULHOST: '${CONSUL_HOST}'
      SCEP_CONSULPORT: '${CONSUL_HTTPS_PORT}'
      SCEP_CONSULCA: '${SCEP_CONSULCA}'
      SCEP_HOST: '${SCEP_CA4_HOST}'
      SCEP_LOG_JSON: '${SCEP_LOG_JSON}'
      JAEGER_SERVICE_NAME: '${SCEP_CA4_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - './lamassu/scep_certs/scep.crt:/ca/ca.pem'
      - './lamassu/scep_certs/scep.key:/ca/ca.key'
      - './lamassu/scep_certs:/certs'
    networks:
      - lamassu-net
    restart: on-failure
    depends_on: 
      - scepdb
      - consul-server
      - vault
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
  
  scepca3:
    build:
      context: https://github.com/lamassuiot/scep.git
    environment:
      SCEP_HTTP_LISTEN_PORT: '${SCEP_HTTP_LISTEN_PORT}'
      SCEP_VAULT_ADDRESS: '${VAULT_API_ADDR}'
      SCEP_VAULT_CA: '${SCEP_VAULT_CA3}'
      SCEP_VAULT_CA_CERT: '${SCEP_VAULT_CA_CERT}'
      SCEP_ROLE_ID: '${SCEP_CA3_ROLE_ID}'
      SCEP_SECRET_ID: '${SCEP_CA3_SECRET_ID}'
      SCEP_FILE_DEPOT: '${SCEP_FILE_DEPOT}'
      SCEP_DB_NAME: '${SCEP_POSTGRESDB}'
      SCEP_DB_USER: '${SCEP_POSTGRESUSER}'
      SCEP_DB_PASSWORD: '${SCEP_POSTGRESPASSWORD}'
      SCEP_DB_HOST: '${SCEP_POSTGRESHOSTNAME}'
      SCEP_DB_PORT: '${SCEP_POSTGRESPORT}'
      SCEP_CONSULPROTOCOL: '${CONSUL_PROTOCOL}'
      SCEP_CONSULHOST: '${CONSUL_HOST}'
      SCEP_CONSULPORT: '${CONSUL_HTTPS_PORT}'
      SCEP_CONSULCA: '${SCEP_CONSULCA}'
      SCEP_HOST: '${SCEP_CA3_HOST}'
      SCEP_LOG_JSON: '${SCEP_LOG_JSON}'
      JAEGER_SERVICE_NAME: '${SCEP_CA3_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - './lamassu/scep_certs/scep.crt:/ca/ca.pem'
      - './lamassu/scep_certs/scep.key:/ca/ca.key'
      - './lamassu/scep_certs:/certs'
    networks:
      - lamassu-net
    restart: on-failure
    depends_on:
      - scepdb
      - consul-server
      - vault
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
    
  scepca2:
    build:
      context: https://github.com/lamassuiot/scep.git
    environment:
      SCEP_HTTP_LISTEN_PORT: '${SCEP_HTTP_LISTEN_PORT}'
      SCEP_VAULT_ADDRESS: '${VAULT_API_ADDR}'
      SCEP_VAULT_CA: '${SCEP_VAULT_CA2}'
      SCEP_VAULT_CA_CERT: '${SCEP_VAULT_CA_CERT}'
      SCEP_ROLE_ID: '${SCEP_CA2_ROLE_ID}'
      SCEP_SECRET_ID: '${SCEP_CA2_SECRET_ID}'
      SCEP_FILE_DEPOT: '${SCEP_FILE_DEPOT}'
      SCEP_DB_NAME: '${SCEP_POSTGRESDB}'
      SCEP_DB_USER: '${SCEP_POSTGRESUSER}'
      SCEP_DB_PASSWORD: '${SCEP_POSTGRESPASSWORD}'
      SCEP_DB_HOST: '${SCEP_POSTGRESHOSTNAME}'
      SCEP_DB_PORT: '${SCEP_POSTGRESPORT}'
      SCEP_CONSULPROTOCOL: '${CONSUL_PROTOCOL}'
      SCEP_CONSULHOST: '${CONSUL_HOST}'
      SCEP_CONSULPORT: '${CONSUL_HTTPS_PORT}'
      SCEP_CONSULCA: '${SCEP_CONSULCA}'
      SCEP_HOST: '${SCEP_CA2_HOST}'
      SCEP_LOG_JSON: '${SCEP_LOG_JSON}'
      JAEGER_SERVICE_NAME: '${SCEP_CA2_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - './lamassu/scep_certs/scep.crt:/ca/ca.pem'
      - './lamassu/scep_certs/scep.key:/ca/ca.key'
      - './lamassu/scep_certs:/certs'
    networks:
      - lamassu-net
    restart: on-failure
    depends_on: 
      - scepdb
      - consul-server
      - vault
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'

  scepca1:
    build:
      context: https://github.com/lamassuiot/scep.git
    environment:
      SCEP_HTTP_LISTEN_PORT: '${SCEP_HTTP_LISTEN_PORT}'
      SCEP_VAULT_ADDRESS: '${VAULT_API_ADDR}'
      SCEP_VAULT_CA: '${SCEP_VAULT_CA1}'
      SCEP_VAULT_CA_CERT: '${SCEP_VAULT_CA_CERT}'
      SCEP_ROLE_ID: '${SCEP_CA1_ROLE_ID}'
      SCEP_SECRET_ID: '${SCEP_CA1_SECRET_ID}'
      SCEP_FILE_DEPOT: '${SCEP_FILE_DEPOT}'
      SCEP_DB_NAME: '${SCEP_POSTGRESDB}'
      SCEP_DB_USER: '${SCEP_POSTGRESUSER}'
      SCEP_DB_PASSWORD: '${SCEP_POSTGRESPASSWORD}'
      SCEP_DB_HOST: '${SCEP_POSTGRESHOSTNAME}'
      SCEP_DB_PORT: '${SCEP_POSTGRESPORT}'
      SCEP_CONSULPROTOCOL: '${CONSUL_PROTOCOL}'
      SCEP_CONSULHOST: '${CONSUL_HOST}'
      SCEP_CONSULPORT: '${CONSUL_HTTPS_PORT}'
      SCEP_CONSULCA: '${SCEP_CONSULCA}'
      SCEP_HOST: '${SCEP_CA1_HOST}'
      SCEP_LOG_JSON: '${SCEP_LOG_JSON}'
      JAEGER_SERVICE_NAME: '${SCEP_CA1_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - './lamassu/scep_certs/scep.crt:/ca/ca.pem'
      - './lamassu/scep_certs/scep.key:/ca/ca.key'
      - './lamassu/scep_certs:/certs'
    networks:
      - lamassu-net
    restart: on-failure
    depends_on:
      - scepdb
      - consul-server
      - vault
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'

  scepdb:
    build:
      context: https://github.com/lamassuiot/scep.git
      dockerfile: Dockerfile.scepdb
    environment:
      POSTGRES_DB: '${SCEP_POSTGRESDB}'
      POSTGRES_USER: '${SCEP_POSTGRESUSER}'
      POSTGRES_PASSWORD: '${SCEP_POSTGRESPASSWORD}'
    volumes:
      - 'scep_pg_data:/var/lib/postgresql/data'
    networks:
      - lamassu-net
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'

  ocsp:
    build:
      context: https://github.com/lamassuiot/GOCSP-responder.git
    environment:
      RESPONDER_FILE_CA: '${RESPONDER_FILE_CA}'
      RESPONDER_KEY: '${RESPONDER_KEY}'
      RESPONDER_CERT: '${RESPONDER_CERT}'
      RESPONDER_DB_NAME: '${ENROLLER_POSTGRESDB}'
      RESPONDER_DB_USER: '${ENROLLER_POSTGRESUSER}'
      RESPONDER_DB_PASSWORD: '${ENROLLER_POSTGRESPASSWORD}'
      RESPONDER_DB_HOST: '${ENROLLER_POSTGRESHOSTNAME}'
      RESPONDER_DB_PORT: '${ENROLLER_POSTGRESPORT}'
      RESPONDER_PORT: '${RESPONDER_PORT}'
      RESPONDER_CONSUL_PROTOCOL: '${CONSUL_PROTOCOL}'
      RESPONDER_CONSUL_HOST: '${CONSUL_HOST}'
      RESPONDER_CONSUL_PORT: '${CONSUL_HTTPS_PORT}'
      RESPONDER_CONSUL_CA: '${RESPONDER_CONSUL_CA}'
      JAEGER_SERVICE_NAME: '${RESPONDER_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - './lamassu/ocsp_certs:/certs'
    networks:
      - lamassu-net
    restart: on-failure
    depends_on:
      - scepdb
      - consul-server
      - fluentd
      - scepproxy
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
  
  device:
    build:
      context: https://github.com/lamassuiot/device-virtual.git
    environment:
      DEVICE_PORT: '${DEVICE_PORT}'
      DEVICE_UIHOST: '${DEVICE_UIHOST}'
      DEVICE_UIPORT: '${DEVICE_UIPORT}'
      DEVICE_UIPROTOCOL: '${DEVICE_UIPROTOCOL}'
      DEVICE_CAPATH: '${DEVICE_CAPATH}'
      DEVICE_CERTFILE: '${DEVICE_CERTFILE}'
      DEVICE_KEYFILE: '${DEVICE_KEYFILE}'
      DEVICE_CONSULPROTOCOL: '${CONSUL_PROTOCOL}'
      DEVICE_CONSULHOST: '${CONSUL_HOST}'
      DEVICE_CONSULPORT: '${CONSUL_HTTPS_PORT}'
      DEVICE_CONSULCA: '${DEVICE_CONSULCA}'
      JAEGER_SERVICE_NAME: '${DEVICE_JAEGER_SERVICE_NAME}'
      JAEGER_AGENT_HOST: '${JAEGER_AGENT_HOST}'
      JAEGER_AGENT_PORT: '${JAEGER_AGENT_PORT}'
    volumes:
      - './lamassu/device_certs:/certs'
    ports:
      - ${DEVICE_PORT}:${DEVICE_PORT}
    networks:
      - lamassu-net
    restart: on-failure
    depends_on:
      - consul-server
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
    
  deviceui:
    build:
      context: https://github.com/lamassuiot/device-virtual-ui.git
    volumes:
      - './lamassu/deviceui_certs:/etc/nginx/certs/server'
    ports:
      - ${DEVICE_UIPORT}:443
    networks:
      - lamassu-net
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
  
  mosquitto:
    build:
      context: https://github.com/lamassuiot/lamassu-mqtt-gateway.git
    volumes:
      - './lamassu/mosquitto_certs:/mosquitto/certs'
      - './lamassu/mosquitto_ca:/mosquitto/ca'
      - 'mosquitto_data:/mosquitto/data'
    ports:
      - ${MOSQUITTO_PORT}:${MOSQUITTO_PORT}
      - ${MOSQUITTOUI_PORT}:${MOSQUITTOUI_PORT}
    networks:
      - lamassu-net
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
    
  prometheus:
    build:
      context: https://github.com/lamassuiot/lamassu-monitoring.git
    ports:
      - ${PROMETHEUS_PORT}:${PROMETHEUS_PORT}
    volumes:
      - './lamassu/prometheus_certs/consul-server.crt:/etc/prometheus/certs/consul-server.crt'
    networks:
      lamassu-net:
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
    
  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      SPAN_STORAGE_TYPE: '${SPAN_STORAGE_TYPE}'
      ES_USERNAME: '${ELASTIC_USERNAME}'
      ES_PASSWORD: '${ELASTIC_PASSWORD}'
      ES_SERVER_URLS: '${ES_SERVER_URLS}'
      ES_TLS_ENABLED: 'true'
      ES_TLS_CA: '${ES_TLS_CA}'
      ES_TLS_CERT: '${ES_TLS_CERT}'
      ES_TLS_KEY: '${ES_TLS_KEY}'
      ES_TLS_SERVER_NAME: '${ES_TLS_SERVER_NAME}'
    volumes:
      - './lamassu/jaeger_certs:/certs'
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    networks:
      lamassu-net:
    depends_on: 
      - elastic
      - fluentd
    restart: on-failure
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'

  elastic:
    build:
      context: https://github.com/lamassuiot/lamassu-tracing.git
    environment:
      node.name: 'elastic'
      discovery.type: 'single-node'
      ELASTIC_CERTS_DIR: '/usr/share/elasticsearch/config'
      ELASTIC_PASSWORD: '${ELASTIC_PASSWORD}'
    volumes:
      - 'elastic_data:/usr/share/elasticsearch/data'
      - './lamassu/elastic_certs/elastic.crt:/usr/share/elasticsearch/config/elastic.crt'
      - './lamassu/elastic_certs/elastic.key:/usr/share/elasticsearch/config/elastic.key'
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      lamassu-net:
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:${FLUENTD_PORT}
        fluentd-async-connect: 'true'
        tag: '{{.Name}}'
    
  fluentd:
    image: fluent/fluentd:latest
    ports:
      - ${FLUENTD_PORT}:${FLUENTD_PORT}
      - ${FLUENTD_PORT}:${FLUENTD_PORT}/udp
    volumes:
      - 'fluentd_data:/fluentd/log'
    networks:
      - lamassu-net
